# https://github.com/pascalgn/automerge-action

name: automerge
on:
  # TODO I'm not sure why this section added. Maybe for
  #   triggering auto-merge on additional conflicts fix or
  #   something similar
  #
  pull_request:
    types:
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
  pull_request_review:
    types:
      - submitted
  check_suite:
    types:
      - completed
  status: {}
jobs:
  automerge:
    if: ${{ startsWith(github.event.pull_request.head.ref, 'release/') && github.event.pull_request.base.ref == 'prod' }}
    runs-on: ubuntu-latest
    steps:
      # We decide to turn this off for 'dev'
      #
      #      - id: automerge-dev
      #        name: automerge-dev
      #        if: ${{ startsWith(github.event.pull_request.head.ref, 'FE-') && github.event.pull_request.base.ref == 'dev' }}
      #        uses: "pascalgn/automerge-action@v0.15.3"
      #        env:
      #          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      #          MERGE_DELETE_BRANCH: true
      #          # for cases when we merge prod to dev
      #          MERGE_DELETE_BRANCH_FILTER: "prod"
      #          MERGE_LABELS: ""
      #          MERGE_METHOD: "squash"
      - id: automerge-prod
        name: automerge-prod
        uses: "pascalgn/automerge-action@v0.15.3"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MERGE_DELETE_BRANCH: true
          MERGE_LABELS: ""
          MERGE_METHOD: "merge"
#  workaround-sync-bug:
#    runs-on: ubuntu-latest
#    steps:
#      - id: workaround
#        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
  sync:
    runs-on: ubuntu-latest
    needs:   [automerge]
#    needs:   [automerge, workaround-sync-bug]
    steps:
      - uses: actions/checkout@v3
        with:
          ref: prod
      - name: ls
        run: |
          echo "ls"
          ls
          echo "ls ../"
          ls ../
          echo "ls ../../"
          ls ../../
          echo "ls ../../../"
          ls ../../../
      - uses: actions/checkout@v3
        with:
          ref: main
      - name: Read release version
        run: |
          export VERSION=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' ../package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
      - name: Check release version
        run: echo "${{ env.VERSION }}"
      - name: Reset prod branch
        run: |
          git fetch origin prod:prod
          git reset --hard prod
      - name: Create Pull Request
        id: sync-dev-with-prod
        uses: peter-evans/create-pull-request@v4
        with:
#          base: main
          branch: prod-sync
          token: ${{ secrets.PAT }}
          title: "Sync dev with prod"
          labels: |
            automated PR
